<?xml version="1.0" encoding="UTF-8"?>
<!--+
    |
    | Copyright (c) 2018, ROE (http://www.roe.ac.uk/)
    | All rights reserved.
    |
    | This program is free software: you can redistribute it and/or modify
    | it under the terms of the GNU General Public License as published by
    | the Free Software Foundation, either version 3 of the License, or
    | (at your option) any later version.
    |
    | This program is distributed in the hope that it will be useful,
    | but WITHOUT ANY WARRANTY; without even the implied warranty of
    | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    | GNU General Public License for more details.
    |
    | You should have received a copy of the GNU General Public License
    | along with this program.  If not, see <http://www.gnu.org/licenses/>.
    |
    +-->
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:txn="http://www.springframework.org/schema/tx"
    xmlns:cxt="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd

        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd

        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd

        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
        "
    >

    <!--+
        | Use a local properties file.
        | http://blog.callistaenterprise.se/2011/11/17/configure-your-spring-web-application/
        | https://stackoverflow.com/questions/9625617/how-do-i-use-an-optional-properties-file-in-a-spring-configuration-file
        | http://www.baeldung.com/2012/02/06/properties-with-spring/

    <cxt:property-placeholder ignore-resource-not-found="true"    location="classpath:firethorn.properties"/>
    <cxt:property-placeholder ignore-unresolvable="true"          location="file:/etc/firethorn.properties"/>
    <cxt:property-placeholder ignore-unresolvable="true"          location="file:${user.home}/firethorn.properties"/>
        +-->
    <cxt:property-placeholder ignore-resource-not-found="true" ignore-unresolvable="true" location="classpath:enteucha.properties, file:/etc/enteucha.properties, file:${user.home}/enteucha.properties"/>

    <!--+
        | Import our database settings.
    <import resource="database-config.xml"/>
        +-->

    <!--+
        | Import our Hibernate mappings.
    <import resource="hibernate-config.xml"/>
        +-->

    <!--+
        | Import our task scheduler config.
    <import resource="scheduler-config.xml"/>
        +-->

    <!--+
        | Load the JSR-303 validator.
    <bean class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
        +-->

    <!--+
        | Enable JSR-303 annotations.
    <mvc:annotation-driven/>
        +-->

    <!--+
        | Explicity register the default Annotation handlers.
        | http://www.vaannila.com/spring/spring-annotation-controller-1.html
    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
        +-->

    <!--+
        | Enable automatic @Autowired component injection.
        | http://amin-mc.blogspot.com/2008/02/configurable-example-with-spring-25.html
    <cxt:annotation-config/>
    <cxt:spring-configured/>
        +-->

    <!--+
        | Scan for annotated components.
        +-->
    <cxt:component-scan base-package="uk.ac.roe.wfau.enteucha"/>

    <!--+
        | Enable MVC annotations.
        +-->
    <mvc:annotation-driven/>

    <!--+
        | Add our own request interceptors.
        | http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        +-->
    <!--mvc:interceptors-->

        <!--+
            | Add our own custom interceptors.
        <bean id="request-debug-interceptor"
            class="uk.ac.roe.wfau.firethorn.webapp.debug.HttpRequestDebug">
        </bean>
            +-->

        <!--+
            | Hibernate Session interceptor.
        <bean id="hibernate-session-interceptor"
            class="org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor">
            <property name="sessionFactory" ref="FireThornHibernateSessionFactory"/>
        </bean>
            +-->

        <!--+
            | Add our own custom interceptors.
        <bean id="operation-interceptor"
            class="uk.ac.roe.wfau.firethorn.webapp.oper.OperationInterceptor">
        </bean>

        <bean id="simple-authentication"
            class="uk.ac.roe.wfau.firethorn.webapp.auth.SimpleHeaderAuthenticator">
        </bean>

        <bean id="anon-authentication"
            class="uk.ac.roe.wfau.firethorn.webapp.auth.AnonymousAuthenticator">
        </bean>
            +-->

    <!--/mvc:interceptors-->

    <!--+
        | Autowire helper.
        | http://guylabs.ch/2014/02/22/autowiring-pring-beans-in-hibernate-jpa-entity-listeners/
    <bean id="FireThornSpringAutowireHelper" class="uk.ac.roe.wfau.firethorn.spring.SpringAutowireHelper"/>
        +-->

</beans>

